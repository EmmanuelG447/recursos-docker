services:
  frontend:
    build:
      context: ./react
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    env_file:
      - ./react/.env
    depends_on:
      - backend
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "256M"
        reservations:
          cpus: "0.3"
          memory: "128M"

  backend:
    build:
      context: ./back
      dockerfile: Dockerfile
    ports:
      - "7000:7000"
    env_file:
      - ./back/.env
    depends_on:
      - mongo
    deploy:
      resources:
        limits:
          cpus: "0.7"
          memory: "512M"
        reservations:
          cpus: "0.4"
          memory: "256M"

  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 123456
      MONGO_INITDB_DATABASE: mern-food-ordering-app
    volumes:
      - mongo_data:/data/db   # Definición del volumen para persistencia de datos
    deploy:
      resources:
        limits:
          cpus: "0.8"
          memory: "1G"
        reservations:
          cpus: "0.5"
          memory: "512M"

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: 123456
      ME_CONFIG_MONGODB_URL: mongodb://root:123456@mongo:27017/
      ME_CONFIG_BASICAUTH: false
    deploy:
      resources:
        limits:
          cpus: "0.3"
          memory: "128M"
        reservations:
          cpus: "0.1"
          memory: "64M"

volumes:
  mongo_data:  # Definición del volumen para MongoDB
